worker_processes  1;
events {
    worker_connections  1024;
}
http {

    log_format main '$http_x_forwarded_for - $remote_user [$time_local] '
    '"$request_method $scheme://$host$request_uri $server_protocol" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" $request_time $upstream_addr $upstream_status $request_body';

    upstream ws-gateway-tui {
        server ws-gateway-cert-test.wob.vw.vwg:1443;
    }

    upstream ws-gateway-tui-nocert {
        server ws-gateway-test.wob.vw.vwg:443;
    }

    upstream ws-gateway-pre {
        server ws-gateway-cert-qs.wob.vw.vwg:443;
    }

    upstream ws-gateway-audi-app {
        server ws-gateway-cert-qs.in.audi.vwg:443;
    }
    
    upstream ws-gateway-audi-pre {
        server ws-gateway-cert-qs.in.audi.vwg:443;
    }

    upstream ws-gateway-audi-prd {
        server ws-gateway-cert.in.audi.vwg:443;
    }

    upstream ws-gateway-prd {
        server ws-gateway-cert.wob.vw.vwg:443;
    }

    include snippets/self-signed.conf;
    include snippets/ssl-params.conf;

    server {
        listen 443 ssl;
        server_name gsbproxy.*;
	    access_log /var/log/nginx/access.log main;

        location /services {

            proxy_pass                    https://ws-gateway-audi-pre/services;

            add_header 'X-Upstream' "" always;
            add_header 'X-Forwarded-Host' "" always;
            add_header 'X-Hostname' "" always;

            proxy_hide_header X-Upstream;
            proxy_hide_header X-Forwarded-Host;
            proxy_hide_header X-Hostname;

            proxy_pass_header Server;

# Staged Certificate
            proxy_ssl_certificate         /etc/nginx/ssl/pre/cert.pem;
            proxy_ssl_certificate_key     /etc/nginx/ssl/pre/cert.key;

#           proxy_ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
#           proxy_ssl_ciphers             HIGH:!aNULL:!MD5;
            proxy_http_version            1.1;
#           proxy_ssl_verify        on;
            proxy_ssl_verify_depth  1;
            proxy_ssl_session_reuse on;
        }

        location /processAlive {
            add_header 'X-Hostname' "";
            return 200 "dev";
        }

        location / {
                return 444;
        }
    }

    server {
        listen 443 ssl;
        server_name ~^(tui|dmo|dev\d\d\d)\.gsbproxy\..+$;
	    access_log /var/log/nginx/access.log main;

        location /services {
            proxy_pass                    https://ws-gateway-audi-app/services;

            add_header 'X-Upstream' "" always;
            add_header 'X-Forwarded-Host' "" always;
            add_header 'X-Hostname' "" always;

            proxy_hide_header X-Upstream;
            proxy_hide_header X-Forwarded-Host;
            proxy_hide_header X-Hostname;

            proxy_pass_header Server;

# Staged Certificate
            proxy_ssl_certificate         /etc/nginx/ssl/tui/cert.pem;
            proxy_ssl_certificate_key     /etc/nginx/ssl/tui/cert.key;

#           proxy_ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
#           proxy_ssl_ciphers             HIGH:!aNULL:!MD5;
            proxy_http_version            1.1;
#           proxy_ssl_verify        on;
            proxy_ssl_verify_depth  1;
            proxy_ssl_session_reuse on;
        }

        location /processAlive {
            add_header 'X-Hostname' "";
            return 200 "tui";
        }

        location / {
                return 444;
        }
    }

    server {
        listen 443 ssl;
        server_name ~^(pre|app)\.gsbproxy\..+$;
	    access_log /var/log/nginx/access.log main;

        location /services/ia/audionline/SignCertificateService {

            proxy_pass                    https://ws-gateway-audi-prd/services;

            add_header 'X-Upstream' "" always;
            add_header 'X-Forwarded-Host' "" always;
            add_header 'X-Hostname' "" always;

            proxy_pass_header Server;

            proxy_hide_header X-Upstream;
            proxy_hide_header X-Forwarded-Host;
            proxy_hide_header X-Hostname;

# Staged Certificate
            proxy_ssl_certificate         /etc/nginx/ssl/pre/cert.pem;
            proxy_ssl_certificate_key     /etc/nginx/ssl/pre/cert.key;

#           proxy_ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
#           proxy_ssl_ciphers             HIGH:!aNULL:!MD5;
            proxy_http_version            1.1;
#           proxy_ssl_verify        on;
            proxy_ssl_verify_depth  1;
            #directive below is turned off due to usage of different client certificates to the same proxied server
            proxy_ssl_session_reuse off;
        }

        location /services/fazit/audionline/ProcessSignatureService {

            proxy_pass                    https://ws-gateway-pre/services;

            add_header 'X-Upstream' "" always;
            add_header 'X-Forwarded-Host' "" always;
            add_header 'X-Hostname' "" always;

            proxy_pass_header Server;

            proxy_hide_header X-Upstream;
            proxy_hide_header X-Forwarded-Host;
            proxy_hide_header X-Hostname;

# Staged Certificate
            proxy_ssl_certificate         /etc/nginx/ssl/pre/cert.pem;
            proxy_ssl_certificate_key     /etc/nginx/ssl/pre/cert.key;

#           proxy_ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
#           proxy_ssl_ciphers             HIGH:!aNULL:!MD5;
            proxy_http_version            1.1;
#           proxy_ssl_verify        on;
            proxy_ssl_verify_depth  1;
            proxy_ssl_session_reuse on;
        }

        location /services/ProcessSignCertificateAsymmetric {

            proxy_pass                    https://ws-gateway-audi-prd/services;

            add_header 'X-Upstream' "" always;
            add_header 'X-Forwarded-Host' "" always;
            add_header 'X-Hostname' "" always;

            proxy_pass_header Server;

            proxy_hide_header X-Upstream;
            proxy_hide_header X-Forwarded-Host;
            proxy_hide_header X-Hostname;

# Staged Certificate
            proxy_ssl_certificate         /etc/nginx/ssl/pre/cert.pem;
            proxy_ssl_certificate_key     /etc/nginx/ssl/pre/cert.key;

#           proxy_ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
#           proxy_ssl_ciphers             HIGH:!aNULL:!MD5;
            proxy_http_version            1.1;
#           proxy_ssl_verify        on;
            proxy_ssl_verify_depth  1;
            #directive below is turned off due to usage of different client certificates to the same proxied server
            proxy_ssl_session_reuse off;
        }

        location /services {

            proxy_pass                    https://ws-gateway-audi-pre/services;

            add_header 'X-Upstream' "" always;
            add_header 'X-Forwarded-Host' "" always;
            add_header 'X-Hostname' "" always;

            proxy_pass_header Server;

            proxy_hide_header X-Upstream;
            proxy_hide_header X-Forwarded-Host;
            proxy_hide_header X-Hostname;

# Staged Certificate
            proxy_ssl_certificate         /etc/nginx/ssl/pre/cert.pem;
            proxy_ssl_certificate_key     /etc/nginx/ssl/pre/cert.key;

#           proxy_ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
#           proxy_ssl_ciphers             HIGH:!aNULL:!MD5;
            proxy_http_version            1.1;
#           proxy_ssl_verify        on;
            proxy_ssl_verify_depth  1;
            proxy_ssl_session_reuse on;
        }

        location /fod {
            
            proxy_pass                    https://ws-gateway-audi-prd/services;

            add_header 'X-Upstream' "" always;
            add_header 'X-Forwarded-Host' "" always;
            add_header 'X-Hostname' "" always;

            proxy_pass_header Server;

            proxy_hide_header X-Upstream;
            proxy_hide_header X-Forwarded-Host;
            proxy_hide_header X-Hostname;

# Staged Certificate
            proxy_ssl_certificate         /etc/nginx/ssl/fod/cert.pem;
            proxy_ssl_certificate_key     /etc/nginx/ssl/fod/cert.key;

#           proxy_ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
#           proxy_ssl_ciphers             HIGH:!aNULL:!MD5;
            proxy_http_version            1.1;
#           proxy_ssl_verify        on;
            proxy_ssl_verify_depth  1;
            #directive below is turned off due to usage of different client certificates to the same proxied server
            proxy_ssl_session_reuse off;
        }
        
        
        location /processAlive {
            add_header 'X-Hostname' "";
                        return 200 "pre";
        }

        location / {
                return 444;
        }
    }

    server {
        listen 443 ssl;
        server_name ~^prd\.gsbproxy\..+$;
	    access_log /var/log/nginx/access.log main;

        location /services {
            proxy_pass                    https://ws-gateway-audi-prd/services;

            add_header 'X-Upstream' "" always;
            add_header 'X-Forwarded-Host' "" always;
            add_header 'X-Hostname' "" always;

            proxy_hide_header X-Upstream;
            proxy_hide_header X-Forwarded-Host;
            proxy_hide_header X-Hostname;

            proxy_pass_header Server;

#            proxy_ssl_certificate         /etc/nginx/ssl/cert.pem;
#            proxy_ssl_certificate_key     /etc/nginx/ssl/cert.key;
# Staged Certificate
            proxy_ssl_certificate         /etc/nginx/ssl/prd/cert.pem;
            proxy_ssl_certificate_key     /etc/nginx/ssl/prd/cert.key;

#           proxy_ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
#           proxy_ssl_ciphers             HIGH:!aNULL:!MD5;
            proxy_http_version            1.1;
#           proxy_ssl_verify        on;
            proxy_ssl_verify_depth  1;
            #directive below is turned off due to usage of different client certificates to the same proxied server
            proxy_ssl_session_reuse off;
        }

        location /processAlive {
            add_header 'X-Hostname' "";
            return 200 "prd";
        }

        location / {
                return 444;
        }
    }

    server {
        listen 443 ssl default_server;
        server_name _;
        return 444;
   }

   # endpoint for metricbeat
   server {
      listen 8081;
      server_name localhost;
      location = /basic_status {
         stub_status;
         access_log off;
         allow 127.0.0.1;
         deny all;
      }
   }
}
